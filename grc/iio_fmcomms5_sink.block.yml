# auto-generated by grc.converter

id: iio_fmcomms5_sink
label: FMComms5 Sink
category: '[Industrial IO]/FMComms'
flags: throttle

parameters:
-   id: uri
    label: IIO context URI
    dtype: string
    default: 'local:'
-   id: frequency1
    label: LO Frequency (TX1/TX2)
    dtype: real
    default: '2400000000'
-   id: frequency2
    label: LO Frequency (TX3/TX4)
    dtype: real
    default: '2400000000'
-   id: samplerate
    label: Sample rate
    dtype: real
    default: '2084000'
-   id: bandwidth
    label: RF bandwidth
    dtype: real
    default: '20000000'
-   id: buffer_size
    label: Buffer size
    dtype: int
    default: '0x8000'
-   id: ch1_en
    label: Channel 1 Enabled
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: ch2_en
    label: Channel 2 Enabled
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: ch3_en
    label: Channel 3 Enabled
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: ch4_en
    label: Channel 4 Enabled
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: cyclic
    label: Cyclic
    dtype: bool
    default: 'False'
    options: ['True', 'False']
-   id: rf_port_select
    label: RF Port Select
    dtype: enum
    options: ['"A"', '"B"']
    option_labels: [A, B]
-   id: attenuation1
    label: Attenuation TX1 (dB)
    dtype: real
    default: '10.0'
-   id: attenuation2
    label: Attenuation TX2 (dB)
    dtype: real
    default: '10.0'
-   id: attenuation3
    label: Attenuation TX3 (dB)
    dtype: real
    default: '10.0'
-   id: attenuation4
    label: Attenuation TX4 (dB)
    dtype: real
    default: '10.0'
-   id: filter
    label: Filter
    dtype: file_open

inputs:
-   domain: stream
    dtype: complex
    multiplicity: ${ sum([ch1_en, ch2_en, ch3_en, ch4_en]) }
asserts:
- ${ sum([ch1_en, ch2_en, ch3_en, ch4_en]) > 0 }
- ${ samplerate >= 2084000 }
- ${ (frequency1 >= 0) }
- ${ (frequency2 >= 0) }
- ${ (bandwidth >= 0) }
- ${ (samplerate >= 0) }

templates:
    imports: from gnuradio import iio
    make: iio.fmcomms5_sink_f32c(${uri}, int(${frequency1}), int(${frequency2}), int(${samplerate}),
        int(${bandwidth}), ${ch1_en}, ${ch2_en}, ${ch3_en}, ${ch4_en}, ${buffer_size},
        ${cyclic}, ${rf_port_select}, ${attenuation1}, ${attenuation2}, ${attenuation3},
        ${attenuation4}, ${filter})
    callbacks:
    - set_params(int(${frequency1}), int(${frequency2}), int(${samplerate}), int(${bandwidth}),
        ${rf_port_select}, ${attenuation1}, ${attenuation2}, ${attenuation3}, ${attenuation4})

file_format: 1
