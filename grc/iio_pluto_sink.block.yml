# auto-generated by grc.converter

id: pluto_sink
label: PlutoSDR Sink
category: '[Industrial IO]/PlutoSDR'
flags: throttle

parameters:
-   id: uri
    label: IIO context URI
    dtype: string
-   id: frequency
    label: LO Frequency
    dtype: real
    default: '2400000000'
-   id: samplerate
    label: Sample rate
    dtype: real
    default: '2084000'
-   id: bandwidth
    label: RF bandwidth
    dtype: real
    default: '20000000'
-   id: buffer_size
    label: Buffer size
    dtype: int
    default: '0x8000'
-   id: cyclic
    label: Cyclic
    dtype: bool
    default: 'False'
    options: ['True', 'False']
-   id: attenuation
    label: Attenuation (dB)
    dtype: real
    default: '10.0'
-   id: filter
    label: Filter
    dtype: file_open
-   id: auto_filter
    label: Filter auto
    dtype: bool
    default: 'True'
    options: ['True', 'False']

inputs:
-   domain: stream
    dtype: complex
    multiplicity: '1'
asserts:
- ${ (samplerate >= 2084000) or (len(filter) > 0) or auto_filter }
- ${ (frequency >= 0) }
- ${ (bandwidth >= 0) }
- ${ (samplerate >= 0) }
- ${ not (auto_filter and len(filter)) }

templates:
    imports: from gnuradio import iio
    make: iio.pluto_sink(${uri}, int(${frequency}), int(${samplerate}), int(${bandwidth}),
        ${buffer_size}, ${cyclic}, ${attenuation}, ${filter}, ${auto_filter})
    callbacks:
    - set_params(int(${frequency}), int(${samplerate}), int(${bandwidth}), ${attenuation},
        ${filter}, ${auto_filter})

file_format: 1
